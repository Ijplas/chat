/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/_app";
exports.ids = ["pages/_app"];
exports.modules = {

/***/ "./lib/Store.js":
/*!**********************!*\
  !*** ./lib/Store.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addChannel\": () => (/* binding */ addChannel),\n/* harmony export */   \"addMessage\": () => (/* binding */ addMessage),\n/* harmony export */   \"deleteChannel\": () => (/* binding */ deleteChannel),\n/* harmony export */   \"deleteMessage\": () => (/* binding */ deleteMessage),\n/* harmony export */   \"fetchChannels\": () => (/* binding */ fetchChannels),\n/* harmony export */   \"fetchMessages\": () => (/* binding */ fetchMessages),\n/* harmony export */   \"fetchUser\": () => (/* binding */ fetchUser),\n/* harmony export */   \"supabase\": () => (/* binding */ supabase),\n/* harmony export */   \"useStore\": () => (/* binding */ useStore)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/supabase-js */ \"@supabase/supabase-js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__.createClient)(\"https://gdejmeuksufjzbconmlk.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdkZWptZXVrc3VmanpiY29ubWxrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjMyMzQwNDEsImV4cCI6MjAzODgxMDA0MX0.2yt32nGZrh6aD193Zh6zjEaIiQJs10aYZMJJHHUZET4\");\n/**\n * @param {number} channelId the currently selected Channel\n */ const useStore = (props)=>{\n    const { 0: channels , 1: setChannels  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const { 0: messages1 , 1: setMessages  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const { 0: users  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(new Map());\n    const { 0: newMessage , 1: handleNewMessage  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const { 0: newChannel , 1: handleNewChannel  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const { 0: newOrUpdatedUser , 1: handleNewOrUpdatedUser  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const { 0: deletedChannel , 1: handleDeletedChannel  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const { 0: deletedMessage , 1: handleDeletedMessage  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    // Load initial data and set up listeners\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        // Get Channels\n        fetchChannels(setChannels);\n        // Listen for new and deleted messages\n        const messageListener = supabase.channel(\"public:messages\").on(\"postgres_changes\", {\n            event: \"INSERT\",\n            schema: \"public\",\n            table: \"messages\"\n        }, (payload)=>handleNewMessage(payload.new)\n        ).on(\"postgres_changes\", {\n            event: \"DELETE\",\n            schema: \"public\",\n            table: \"messages\"\n        }, (payload)=>handleDeletedMessage(payload.old)\n        ).subscribe();\n        // Listen for changes to our users\n        const userListener = supabase.channel(\"public:users\").on(\"postgres_changes\", {\n            event: \"*\",\n            schema: \"public\",\n            table: \"users\"\n        }, (payload)=>handleNewOrUpdatedUser(payload.new)\n        ).subscribe();\n        // Listen for new and deleted channels\n        const channelListener = supabase.channel(\"public:channels\").on(\"postgres_changes\", {\n            event: \"INSERT\",\n            schema: \"public\",\n            table: \"channels\"\n        }, (payload)=>handleNewChannel(payload.new)\n        ).on(\"postgres_changes\", {\n            event: \"DELETE\",\n            schema: \"public\",\n            table: \"channels\"\n        }, (payload)=>handleDeletedChannel(payload.old)\n        ).subscribe();\n        // Cleanup on unmount\n        return ()=>{\n            supabase.removeChannel(supabase.channel(messageListener));\n            supabase.removeChannel(supabase.channel(userListener));\n            supabase.removeChannel(supabase.channel(channelListener));\n        };\n    }, []);\n    // Update when the route changes\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if ((props === null || props === void 0 ? void 0 : props.channelId) > 0) {\n            fetchMessages(props.channelId, (messages)=>{\n                messages.forEach((x)=>users.set(x.user_id, x.author)\n                );\n                setMessages(messages);\n            });\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        props.channelId\n    ]);\n    // New message received from Postgres\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (newMessage && newMessage.channel_id === Number(props.channelId)) {\n            const handleAsync = async ()=>{\n                let authorId = newMessage.user_id;\n                if (!users.get(authorId)) await fetchUser(authorId, (user)=>handleNewOrUpdatedUser(user)\n                );\n                setMessages(messages1.concat(newMessage));\n            };\n            handleAsync();\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        newMessage\n    ]);\n    // Deleted message received from postgres\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (deletedMessage) setMessages(messages1.filter((message)=>message.id !== deletedMessage.id\n        ));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        deletedMessage\n    ]);\n    // New channel received from Postgres\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (newChannel) setChannels(channels.concat(newChannel));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        newChannel\n    ]);\n    // Deleted channel received from postgres\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (deletedChannel) setChannels(channels.filter((channel)=>channel.id !== deletedChannel.id\n        ));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        deletedChannel\n    ]);\n    // New or updated user received from Postgres\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (newOrUpdatedUser) users.set(newOrUpdatedUser.id, newOrUpdatedUser);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        newOrUpdatedUser\n    ]);\n    return {\n        // We can export computed values here to map the authors to each message\n        messages: messages1.map((x)=>({\n                ...x,\n                author: users.get(x.user_id)\n            })\n        ),\n        channels: channels !== null ? channels.sort((a, b)=>a.slug.localeCompare(b.slug)\n        ) : [],\n        users\n    };\n};\n/**\n * Fetch all channels\n * @param {function} setState Optionally pass in a hook or callback to set the state\n */ const fetchChannels = async (setState)=>{\n    try {\n        let { data  } = await supabase.from(\"channels\").select(\"*\");\n        if (setState) setState(data);\n        return data;\n    } catch (error) {\n        console.log(\"error\", error);\n    }\n};\n/**\n * Fetch a single user\n * @param {number} userId\n * @param {function} setState Optionally pass in a hook or callback to set the state\n */ const fetchUser = async (userId, setState)=>{\n    try {\n        let { data  } = await supabase.from(\"users\").select(`*`).eq(\"id\", userId);\n        let user = data[0];\n        if (setState) setState(user);\n        return user;\n    } catch (error) {\n        console.log(\"error\", error);\n    }\n};\n/**\n * Fetch all messages and their authors\n * @param {number} channelId\n * @param {function} setState Optionally pass in a hook or callback to set the state\n */ const fetchMessages = async (channelId, setState)=>{\n    try {\n        let { data  } = await supabase.from(\"messages\").select(`*, author:user_id(*)`).eq(\"channel_id\", channelId).order(\"inserted_at\", {\n            ascending: true\n        });\n        if (setState) setState(data);\n        return data;\n    } catch (error) {\n        console.log(\"error\", error);\n    }\n};\n/**\n * Insert a new channel into the DB\n * @param {string} slug The channel name\n * @param {number} user_id The channel creator\n */ const addChannel = async (slug, user_id)=>{\n    try {\n        let { data  } = await supabase.from(\"channels\").insert([\n            {\n                slug,\n                created_by: user_id\n            }\n        ]).select();\n        return data;\n    } catch (error) {\n        console.log(\"error\", error);\n    }\n};\n/**\n * Insert a new message into the DB\n * @param {string} message The message text\n * @param {number} channel_id\n * @param {number} user_id The author\n */ const addMessage = async (message, channel_id, user_id)=>{\n    try {\n        let { data  } = await supabase.from(\"messages\").insert([\n            {\n                message,\n                channel_id,\n                user_id\n            }\n        ]).select();\n        return data;\n    } catch (error) {\n        console.log(\"error\", error);\n    }\n};\n/**\n * Delete a channel from the DB\n * @param {number} channel_id\n */ const deleteChannel = async (channel_id)=>{\n    try {\n        let { data  } = await supabase.from(\"channels\").delete().match({\n            id: channel_id\n        });\n        return data;\n    } catch (error) {\n        console.log(\"error\", error);\n    }\n};\n/**\n * Delete a message from the DB\n * @param {number} message_id\n */ const deleteMessage = async (message_id)=>{\n    try {\n        let { data  } = await supabase.from(\"messages\").delete().match({\n            id: message_id\n        });\n        return data;\n    } catch (error) {\n        console.log(\"error\", error);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/Store.js\n");

/***/ }),

/***/ "./lib/UserContext.js":
/*!****************************!*\
  !*** ./lib/UserContext.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nconst UserContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (UserContext);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvVXNlckNvbnRleHQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFDO0FBRXJDLE1BQU1DLFdBQVcsaUJBQUdELG9EQUFhLEVBQUU7QUFFbkMsaUVBQWVDLFdBQVciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBhYmFzZS1zbGFjay1jbG9uZS1iYXNpYy8uL2xpYi9Vc2VyQ29udGV4dC5qcz8wMmM5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNvbnRleHQgfSBmcm9tICdyZWFjdCdcblxuY29uc3QgVXNlckNvbnRleHQgPSBjcmVhdGVDb250ZXh0KClcblxuZXhwb3J0IGRlZmF1bHQgVXNlckNvbnRleHRcbiJdLCJuYW1lcyI6WyJjcmVhdGVDb250ZXh0IiwiVXNlckNvbnRleHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/UserContext.js\n");

/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SupabaseSlackClone)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_style_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ~/styles/style.scss */ \"./styles/style.scss\");\n/* harmony import */ var _styles_style_scss__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_style_scss__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/router */ \"next/router\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var lib_UserContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lib/UserContext */ \"./lib/UserContext.js\");\n/* harmony import */ var lib_Store__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lib/Store */ \"./lib/Store.js\");\n/* harmony import */ var jwt_decode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! jwt-decode */ \"jwt-decode\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([jwt_decode__WEBPACK_IMPORTED_MODULE_6__]);\njwt_decode__WEBPACK_IMPORTED_MODULE_6__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\n\nfunction SupabaseSlackClone({ Component , pageProps  }) {\n    const { 0: userLoaded , 1: setUserLoaded  } = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const { 0: user , 1: setUser  } = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const { 0: session1 , 1: setSession  } = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_3__.useRouter)();\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        function saveSession(/** @type {Awaited<ReturnType<typeof supabase.auth.getSession>>['data']['session']} */ session) {\n            setSession(session);\n            const currentUser = session === null || session === void 0 ? void 0 : session.user;\n            if (session) {\n                const jwt = (0,jwt_decode__WEBPACK_IMPORTED_MODULE_6__.jwtDecode)(session.access_token);\n                currentUser.appRole = jwt.user_role;\n            }\n            setUser(currentUser !== null && currentUser !== void 0 ? currentUser : null);\n            setUserLoaded(!!currentUser);\n            if (currentUser) {\n                router.push(\"/channels/[id]\", \"/channels/1\");\n            }\n        }\n        lib_Store__WEBPACK_IMPORTED_MODULE_5__.supabase.auth.getSession().then(({ data: { session  }  })=>saveSession(session)\n        );\n        const { subscription: authListener  } = lib_Store__WEBPACK_IMPORTED_MODULE_5__.supabase.auth.onAuthStateChange(async (event, session)=>{\n            console.log(session);\n            saveSession(session);\n        });\n        return ()=>{\n            authListener.unsubscribe();\n        };\n    }, []);\n    const signOut = async ()=>{\n        const { error  } = await lib_Store__WEBPACK_IMPORTED_MODULE_5__.supabase.auth.signOut();\n        if (!error) {\n            router.push(\"/\");\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(lib_UserContext__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Provider, {\n        value: {\n            userLoaded,\n            user,\n            signOut\n        },\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n            ...pageProps\n        }, void 0, false, {\n            fileName: \"/Users/ivan/Documents/new/chat/pages/_app.js\",\n            lineNumber: 61,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/ivan/Documents/new/chat/pages/_app.js\",\n        lineNumber: 54,\n        columnNumber: 5\n    }, this);\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQTRCO0FBQ3NCO0FBQ1g7QUFDRTtBQUNMO0FBQ0U7QUFFdkIsU0FBU08sa0JBQWtCLENBQUMsRUFBRUMsU0FBUyxHQUFFQyxTQUFTLEdBQUUsRUFBRTtJQUNuRSxNQUFNLEVBUlIsR0FRU0MsVUFBVSxHQVJuQixHQVFxQkMsYUFBYSxNQUFJViwrQ0FBUSxDQUFDLEtBQUssQ0FBQztJQUNuRCxNQUFNLEVBVFIsR0FTU1csSUFBSSxHQVRiLEdBU2VDLE9BQU8sTUFBSVosK0NBQVEsQ0FBQyxJQUFJLENBQUM7SUFDdEMsTUFBTSxFQVZSLEdBVVNhLFFBQU8sR0FWaEIsR0FVa0JDLFVBQVUsTUFBSWQsK0NBQVEsQ0FBQyxJQUFJLENBQUM7SUFDNUMsTUFBTWUsTUFBTSxHQUFHYixzREFBUyxFQUFFO0lBRTFCRCxnREFBUyxDQUFDLElBQU07UUFDZCxTQUFTZSxXQUFXLENBQ2xCLHNGQUFzRixDQUN0RkgsT0FBTyxFQUNQO1lBQ0FDLFVBQVUsQ0FBQ0QsT0FBTyxDQUFDO1lBQ25CLE1BQU1JLFdBQVcsR0FBR0osT0FBTyxhQUFQQSxPQUFPLFdBQU0sR0FBYkEsS0FBQUEsQ0FBYSxHQUFiQSxPQUFPLENBQUVGLElBQUk7WUFDakMsSUFBSUUsT0FBTyxFQUFFO2dCQUNYLE1BQU1LLEdBQUcsR0FBR2IscURBQVMsQ0FBQ1EsT0FBTyxDQUFDTSxZQUFZLENBQUM7Z0JBQzNDRixXQUFXLENBQUNHLE9BQU8sR0FBR0YsR0FBRyxDQUFDRyxTQUFTO2FBQ3BDO1lBQ0RULE9BQU8sQ0FBQ0ssV0FBVyxhQUFYQSxXQUFXLGNBQVhBLFdBQVcsR0FBSSxJQUFJLENBQUM7WUFDNUJQLGFBQWEsQ0FBQyxDQUFDLENBQUNPLFdBQVcsQ0FBQztZQUM1QixJQUFJQSxXQUFXLEVBQUU7Z0JBQ2ZGLE1BQU0sQ0FBQ08sSUFBSSxDQUFDLGdCQUFnQixFQUFFLGFBQWEsQ0FBQzthQUM3QztTQUNGO1FBRURsQiwrREFBd0IsRUFBRSxDQUFDcUIsSUFBSSxDQUFDLENBQUMsRUFBRUMsSUFBSSxFQUFFLEVBQUViLE9BQU8sR0FBRSxHQUFFLEdBQUtHLFdBQVcsQ0FBQ0gsT0FBTyxDQUFDO1FBQUEsQ0FBQztRQUVoRixNQUFNLEVBQUVjLFlBQVksRUFBRUMsWUFBWSxHQUFFLEdBQUd4QixzRUFBK0IsQ0FDcEUsT0FBTzBCLEtBQUssRUFBRWpCLE9BQU8sR0FBSztZQUN4QmtCLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDbkIsT0FBTyxDQUFDO1lBQ3BCRyxXQUFXLENBQUNILE9BQU8sQ0FBQztTQUNyQixDQUNGO1FBRUQsT0FBTyxJQUFNO1lBQ1hlLFlBQVksQ0FBQ0ssV0FBVyxFQUFFO1NBQzNCO0tBQ0YsRUFBRSxFQUFFLENBQUM7SUFFTixNQUFNQyxPQUFPLEdBQUcsVUFBWTtRQUMxQixNQUFNLEVBQUVDLEtBQUssR0FBRSxHQUFHLE1BQU0vQiw0REFBcUIsRUFBRTtRQUMvQyxJQUFJLENBQUMrQixLQUFLLEVBQUU7WUFDVnBCLE1BQU0sQ0FBQ08sSUFBSSxDQUFDLEdBQUcsQ0FBQztTQUNqQjtLQUNGO0lBRUQscUJBQ0UsOERBQUNuQixnRUFBb0I7UUFDbkJrQyxLQUFLLEVBQUU7WUFDTDVCLFVBQVU7WUFDVkUsSUFBSTtZQUNKdUIsT0FBTztTQUNSO2tCQUVELDRFQUFDM0IsU0FBUztZQUFFLEdBQUdDLFNBQVM7Ozs7O2dCQUFJOzs7OztZQUNQLENBQ3hCO0NBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBhYmFzZS1zbGFjay1jbG9uZS1iYXNpYy8uL3BhZ2VzL19hcHAuanM/ZTBhZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ34vc3R5bGVzL3N0eWxlLnNjc3MnXG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInXG5pbXBvcnQgVXNlckNvbnRleHQgZnJvbSAnbGliL1VzZXJDb250ZXh0J1xuaW1wb3J0IHsgc3VwYWJhc2UgfSBmcm9tICdsaWIvU3RvcmUnXG5pbXBvcnQgeyBqd3REZWNvZGUgfSBmcm9tICdqd3QtZGVjb2RlJ1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBTdXBhYmFzZVNsYWNrQ2xvbmUoeyBDb21wb25lbnQsIHBhZ2VQcm9wcyB9KSB7XG4gIGNvbnN0IFt1c2VyTG9hZGVkLCBzZXRVc2VyTG9hZGVkXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbdXNlciwgc2V0VXNlcl0gPSB1c2VTdGF0ZShudWxsKVxuICBjb25zdCBbc2Vzc2lvbiwgc2V0U2Vzc2lvbl0gPSB1c2VTdGF0ZShudWxsKVxuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgZnVuY3Rpb24gc2F2ZVNlc3Npb24oXG4gICAgICAvKiogQHR5cGUge0F3YWl0ZWQ8UmV0dXJuVHlwZTx0eXBlb2Ygc3VwYWJhc2UuYXV0aC5nZXRTZXNzaW9uPj5bJ2RhdGEnXVsnc2Vzc2lvbiddfSAqL1xuICAgICAgc2Vzc2lvblxuICAgICkge1xuICAgICAgc2V0U2Vzc2lvbihzZXNzaW9uKVxuICAgICAgY29uc3QgY3VycmVudFVzZXIgPSBzZXNzaW9uPy51c2VyXG4gICAgICBpZiAoc2Vzc2lvbikge1xuICAgICAgICBjb25zdCBqd3QgPSBqd3REZWNvZGUoc2Vzc2lvbi5hY2Nlc3NfdG9rZW4pXG4gICAgICAgIGN1cnJlbnRVc2VyLmFwcFJvbGUgPSBqd3QudXNlcl9yb2xlXG4gICAgICB9XG4gICAgICBzZXRVc2VyKGN1cnJlbnRVc2VyID8/IG51bGwpXG4gICAgICBzZXRVc2VyTG9hZGVkKCEhY3VycmVudFVzZXIpXG4gICAgICBpZiAoY3VycmVudFVzZXIpIHtcbiAgICAgICAgcm91dGVyLnB1c2goJy9jaGFubmVscy9baWRdJywgJy9jaGFubmVscy8xJylcbiAgICAgIH1cbiAgICB9XG5cbiAgICBzdXBhYmFzZS5hdXRoLmdldFNlc3Npb24oKS50aGVuKCh7IGRhdGE6IHsgc2Vzc2lvbiB9IH0pID0+IHNhdmVTZXNzaW9uKHNlc3Npb24pKVxuXG4gICAgY29uc3QgeyBzdWJzY3JpcHRpb246IGF1dGhMaXN0ZW5lciB9ID0gc3VwYWJhc2UuYXV0aC5vbkF1dGhTdGF0ZUNoYW5nZShcbiAgICAgIGFzeW5jIChldmVudCwgc2Vzc2lvbikgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhzZXNzaW9uKVxuICAgICAgICBzYXZlU2Vzc2lvbihzZXNzaW9uKVxuICAgICAgfVxuICAgIClcblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBhdXRoTGlzdGVuZXIudW5zdWJzY3JpYmUoKVxuICAgIH1cbiAgfSwgW10pXG5cbiAgY29uc3Qgc2lnbk91dCA9IGFzeW5jICgpID0+IHtcbiAgICBjb25zdCB7IGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZS5hdXRoLnNpZ25PdXQoKVxuICAgIGlmICghZXJyb3IpIHtcbiAgICAgIHJvdXRlci5wdXNoKCcvJylcbiAgICB9XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxVc2VyQ29udGV4dC5Qcm92aWRlclxuICAgICAgdmFsdWU9e3tcbiAgICAgICAgdXNlckxvYWRlZCxcbiAgICAgICAgdXNlcixcbiAgICAgICAgc2lnbk91dCxcbiAgICAgIH19XG4gICAgPlxuICAgICAgPENvbXBvbmVudCB7Li4ucGFnZVByb3BzfSAvPlxuICAgIDwvVXNlckNvbnRleHQuUHJvdmlkZXI+XG4gIClcbn1cbiJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwidXNlUm91dGVyIiwiVXNlckNvbnRleHQiLCJzdXBhYmFzZSIsImp3dERlY29kZSIsIlN1cGFiYXNlU2xhY2tDbG9uZSIsIkNvbXBvbmVudCIsInBhZ2VQcm9wcyIsInVzZXJMb2FkZWQiLCJzZXRVc2VyTG9hZGVkIiwidXNlciIsInNldFVzZXIiLCJzZXNzaW9uIiwic2V0U2Vzc2lvbiIsInJvdXRlciIsInNhdmVTZXNzaW9uIiwiY3VycmVudFVzZXIiLCJqd3QiLCJhY2Nlc3NfdG9rZW4iLCJhcHBSb2xlIiwidXNlcl9yb2xlIiwicHVzaCIsImF1dGgiLCJnZXRTZXNzaW9uIiwidGhlbiIsImRhdGEiLCJzdWJzY3JpcHRpb24iLCJhdXRoTGlzdGVuZXIiLCJvbkF1dGhTdGF0ZUNoYW5nZSIsImV2ZW50IiwiY29uc29sZSIsImxvZyIsInVuc3Vic2NyaWJlIiwic2lnbk91dCIsImVycm9yIiwiUHJvdmlkZXIiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/_app.js\n");

/***/ }),

/***/ "./styles/style.scss":
/*!***************************!*\
  !*** ./styles/style.scss ***!
  \***************************/
/***/ (() => {



/***/ }),

/***/ "@supabase/supabase-js":
/*!****************************************!*\
  !*** external "@supabase/supabase-js" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("@supabase/supabase-js");

/***/ }),

/***/ "next/router":
/*!******************************!*\
  !*** external "next/router" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/router");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "jwt-decode":
/*!*****************************!*\
  !*** external "jwt-decode" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = import("jwt-decode");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/_app.js"));
module.exports = __webpack_exports__;

})();